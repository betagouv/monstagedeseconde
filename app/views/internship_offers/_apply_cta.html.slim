.d-flex.align-items-center.fr-px-1w data-controller="internship-offer"
  - if internship_offer.from_api?
    = render "internship_applications/call_to_action/api", internship_offer: internship_offer
  - elsif user_signed_in?
    - if can?(:apply, internship_offer) && internship_offer.has_spots_left?
      - if internship_offer.already_applied_by_student?(current_user)
        = button_to 'Déjà postulé', '', class: 'fr-btn', disabled: true
      - elsif Flipper.enabled? :application_inhibited
        = link_to 'Postuler',
                  '#',
                  class: 'fr-btn fr-icon-edit-fill fr-btn--icon-left disabled',
                  tabindex: -1,
                  aria: { disabled: true },
                  onclick: "return false;" 
      - else
        = link_to 'Postuler',
                  new_internship_offer_internship_application_path(internship_offer_id: internship_offer.id),
                  class: 'fr-btn fr-icon-edit-fill fr-btn--icon-left',
                  data: { action: 'click->internship-offer#applyCount', target: 'internship-offer.applyButton', internshipOfferId: internship_offer.id, userId: current_user.id, turbo: false }

    - else
      / disabled button
      div
        = button_to 'Postuler', '', class: 'fr-btn fr-btn--icon-left fr-icon-edit-fill', disabled: true
        br
        - reason = current_user.presenter.forbidden_application_reason(internship_offer)
        - unless reason.nil?
          p.fr-badge.fr-badge--warning.fr-mt-1w
            = reason

  - else
    - path = (employers_only? || Flipper.enabled?(:application_inhibited)) ? '#' :  visitor_apply_path
    .d-flex
      = form_with url: path, method: :post, data: { turbo: false } do
        = submit_tag 'Postuler', class: "fr-btn fr-btn--icon-left fr-icon-edit-fill"

  .fr-mx-5w
    - if(user_signed_in? && can?(:create, Favorite))
      - is_favorite = internship_offer.is_favorite?(current_user)
      = react_component("InternshipOfferFavoriteButton",
                        props: { internshipOffer: { id: internship_offer.id,
                                                    is_favorite: is_favorite,
                                                    isDisabled: !can?(:create, Favorite) }})