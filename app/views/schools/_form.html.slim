= form_with model: @school,
            url: schools_path(@school),
            data: {turbo: false} do |f|
  = render "layouts/form_errors", resource: @school, resource_name: :school

  fieldset
    legend= "Établissement"

    .form-group
      = f.label :name, class: 'fr-label' do
        = "Nom de l'établissement (commencer avec 'Lycée', 'Collège', 'Ecole', etc.)"
        = f.rg2a_required_content_tag

      = f.text_field :name,
                     class: "fr-input col-lg-6",
                     maxlength: 150,
                     required:true

    .form-group
      = f.label :code_uai,
                     class: 'fr-label' do
        = "Code UAI de l'établissement"
        = f.rg2a_required_content_tag

      = f.text_field :code_uai,
                     class: "fr-input col-lg-6",
                     maxlength: 8,
                     required:true

    .form-group
      = f.label :is_public, class: 'fr-label' do
        = "Public / Privé"
        = f.rg2a_required_content_tag

      - collection = [["Public", true], ["Privé", false]]
      = f.select :is_public,
                  options_for_select(collection),
                  {prompt: ""},
                  { class: "fr-select col-lg-6" }
    .form-group
      = f.label :contract_code, class: 'fr-label' do
        = "Type de contrat"
        = f.rg2a_required_content_tag
        span class="fr-hint-text"
          |Choisir SANS OBJET pour les établissements publics

      - collection = School::CONTRACT_CODES.map{ |code, label| [label, code] }
      = f.select :contract_code,
                  options_for_select(collection),
                  {prompt: ""},
                  { class: "fr-select col-lg-6" }


    .form-group.mt-4
       .fr-checkbox-group.fr-checkbox-group--sm
        = f.check_box :visible
        = f.label :visible, 'Actif (accessible aux utilisateurs)', class: 'fr-label'

  fieldset
    legend= "Localisation"

    = react_component("AddressInput", props: { resourceName: :school,
                                               currentStreet: @school.street,
                                               currentCity: @school.city,
                                               currentZipcode: @school.zipcode,
                                               currentLatitude: @school.coordinates.try(:lat).try(:to_f),
                                               currentLongitude: @school.coordinates.try(:lng).try(:to_f),
                                               currentFullAddress: @school.formatted_autocomplete_address,
                                               isDuplication: false,
                                               editMode: false })

  .actions.d-flex.d-sm-block
    = f.submit "Créer l'établissement", class: 'fr-btn'
