class StudentsAnonymizeJob < ActiveJob::Base
  queue_as :default

  def perform(use_fast_method = false)
    Rails.logger.info "üöÄ D√©but du job d'archivage des √©tudiants"
    Rails.logger.info "‚è∞ Job d√©marr√© √† #{Time.current}"
    Rails.logger.info "‚ö° Mode rapide: #{use_fast_method}"

    begin
      if use_fast_method
        Rails.logger.info 'üöÄ Utilisation de la m√©thode ultra-rapide'
        Services::Archiver.archive_students_fast
      else
        Rails.logger.info 'üöÄ Utilisation de la m√©thode standard'
        Services::Archiver.archive_students
      end
      Rails.logger.info "‚úÖ Job d'archivage termin√© avec succ√®s"
    rescue StandardError => e
      Rails.logger.error "‚ùå Erreur dans le job d'archivage: #{e.message}"
      Rails.logger.error e.backtrace.join("\n")
      raise e
    end

    Rails.logger.info "‚è∞ Job termin√© √† #{Time.current}"
  end
end
