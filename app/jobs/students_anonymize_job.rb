class StudentsAnonymizeJob < ActiveJob::Base
  queue_as :default

  def perform
    Rails.logger.info "üöÄ D√©but du job d'archivage des √©tudiants"
    Rails.logger.info "‚è∞ Job d√©marr√© √† #{Time.current}"
    
    begin
      Services::Archiver.archive_students
      Rails.logger.info "‚úÖ Job d'archivage termin√© avec succ√®s"
    rescue => e
      Rails.logger.error "‚ùå Erreur dans le job d'archivage: #{e.message}"
      Rails.logger.error e.backtrace.join("\n")
      raise e
    end
    
    Rails.logger.info "‚è∞ Job termin√© √† #{Time.current}"
  end
end